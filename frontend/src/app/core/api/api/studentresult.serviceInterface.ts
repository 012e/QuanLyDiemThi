/**
 * 
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { PaginatedStandaloneStudentResultList } from '../model/models';
import { PatchedStandaloneStudentResult } from '../model/models';
import { StandaloneStudentResult } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface StudentresultServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param standaloneStudentResult 
     */
    studentresultCreate(standaloneStudentResult: StandaloneStudentResult, extraHttpRequestParams?: any): Observable<StandaloneStudentResult>;

    /**
     * 
     * 
     * @param id A unique integer value identifying this student result.
     */
    studentresultDestroy(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param limit Number of results to return per page.
     * @param offset The initial index from which to return the results.
     * @param ordering Which field to use when ordering the results.
     */
    studentresultList(limit?: number, offset?: number, ordering?: string, extraHttpRequestParams?: any): Observable<PaginatedStandaloneStudentResultList>;

    /**
     * 
     * 
     * @param id A unique integer value identifying this student result.
     * @param patchedStandaloneStudentResult 
     */
    studentresultPartialUpdate(id: number, patchedStandaloneStudentResult?: PatchedStandaloneStudentResult, extraHttpRequestParams?: any): Observable<StandaloneStudentResult>;

    /**
     * 
     * 
     * @param id A unique integer value identifying this student result.
     */
    studentresultRetrieve(id: number, extraHttpRequestParams?: any): Observable<StandaloneStudentResult>;

    /**
     * 
     * 
     * @param id A unique integer value identifying this student result.
     * @param standaloneStudentResult 
     */
    studentresultUpdate(id: number, standaloneStudentResult: StandaloneStudentResult, extraHttpRequestParams?: any): Observable<StandaloneStudentResult>;

}
