/**
 * 
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { PaginatedTeacherList } from '../model/models';
import { PatchedTeacher } from '../model/models';
import { Teacher } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface UserServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param teacher 
     */
    userCreate(teacher: Teacher, extraHttpRequestParams?: any): Observable<Teacher>;

    /**
     * 
     * 
     * @param id A unique integer value identifying this user.
     */
    userDestroy(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param limit Number of results to return per page.
     * @param offset The initial index from which to return the results.
     * @param ordering Which field to use when ordering the results.
     */
    userList(limit?: number, offset?: number, ordering?: string, extraHttpRequestParams?: any): Observable<PaginatedTeacherList>;

    /**
     * 
     * 
     * @param id A unique integer value identifying this user.
     * @param patchedTeacher 
     */
    userPartialUpdate(id: number, patchedTeacher?: PatchedTeacher, extraHttpRequestParams?: any): Observable<Teacher>;

    /**
     * 
     * 
     * @param id A unique integer value identifying this user.
     */
    userRetrieve(id: number, extraHttpRequestParams?: any): Observable<Teacher>;

    /**
     * 
     * 
     * @param id A unique integer value identifying this user.
     * @param teacher 
     */
    userUpdate(id: number, teacher: Teacher, extraHttpRequestParams?: any): Observable<Teacher>;

}
